{
    "collab_server" : "",
    "contents" : "##Preparing RDS file for map filtering app\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\nsetwd(\"~/Documents/Wildlife_Trade/IWT_portal/\")\nload(\"~/Documents/Wildlife_Trade/IWT_Evidence_Map.RData\")\n\n#Isolate country data and add region column\ncountry_data <- select(data.study,aid,Study_country)\ncountry_data <- distinct(country_data)\nreg <- read.csv(\"data/allcountries.csv\",header=TRUE)\n#create blank data matrix\nrows <- c(1:nrow(country_data))\nreg_data <- matrix(nrow=nrow(country_data),ncol=2)\nrownames(reg_data) <- rows\ncolnames(reg_data) <- c(\"region\",\"subregion\")\n\n#Assign regions\nfor (i in rows){\n  country <- country_data$Study_country[i]\n  sub <- filter(reg,Country == country)\n  reg_data[i,\"region\"] <- as.character(sub$Region)\n  reg_data[i,\"subregion\"] <- as.character(sub$Subregion)\n}\n\nreg_data <- as.data.frame(reg_data)\ncountry_data_final <- bind_cols(country_data,reg_data)\n\n#Read in biomes\nbiome_data <- distinct(data.biomes)\n\n#Attach final data frames\nmap_data_final <- left_join(data.interv,country_data_final,by=\"aid\")\nmap_data_final <- distinct(map_data_final)\nmap_data_final <- left_join(map_data_final,biome_data,by=\"aid\")\nmap_data_final <- distinct(map_data_final)\nmap_data_final <- left_join(map_data_final,data.outcome,by=\"aid\")\nmap_data_final <- distinct(map_data_final)\n\n#Total countries\nrows <- c(1:nrow(map_data_final))\ntots <- matrix(nrow=nrow(map_data_final),ncol=1)\nrownames(tots) <- rows\ncolnames(tots) <- \"total_countries\"\n\nfor (i in rows){\n  if (map_data_final$region[i] == \"Africa\"){\n    tots[i] <- 56\n  } else if (map_data_final$region[i] == \"Asia\"){\n    tots[i] <- 43\n  } else if (map_data_final$region[i] == \"Europe\"){\n    tots[i] <- 14\n  } else if (map_data_final$region[i] == \"Latin America\"){\n    tots[i] <- 32\n  } else if (map_data_final$region[i] == \"Oceania\"){\n    tots[i] <- 12\n  } else\n    tots[i] <- NA\n}\n\ntots <- as.data.frame(tots)\nmap_data_final <- bind_cols(map_data_final,tots)\n\n#Append study design and impact evaluation information\n\nie <- select(data.study,aid,Comps,Data_type)\nie <- distinct(ie)\nie_e <- filter(ie,Comps==1)\nie_e <- distinct(ie_e)\nie_e_e <- filter(ie_e,Data_type == \"Quant\")\nie_aid <- select(ie_e_e,aid)\nie_aid[,\"IE\"] <- \"Y\"\n\nmap_data_final <- full_join(map_data_final,ie_aid, by=\"aid\")\nmap_data_final[,\"IE\"][is.na(map_data_final[,\"IE\"])] <- \"N\"\n\nbib <- select(data.biblio,aid,Pub_type,Authors,DOI,Pub_year,Title,Journal)\nbib <- distinct(bib)\nmap_data_final <- left_join(map_data_final,bib,by=\"aid\")\n\nmap_data_final <- assignBiomeGroups(map_data_final,out)\n\n# study <- select(data.study, aid, Comps, Comps.type, Comps.time, Design.qual_only, Design.assigned, Design.control)\n# study <- distinct(study)\n# study$study_type <- c(\"\")\n# row <- c(1:nrow(study))\n# \n# BACI <- filter(study, Design.control == 1,(Comps.time == \"Punctuated\" | Comps.time == \"Yes, punctuated\"))\n# BACI <- distinct(BACI)\n# BACI$study_type <- \"BACI\"\n# BA <- filter(study, Design.control == 0,(Comps.time == \"Punctuated\" | Comps.time == \"Yes, punctuated\"))\n# BA <- distinct(BA)\n# BA$study_type <- \"BA\"\n# CT <- filter(study, (Comps.time == \"Continual\" | Comps.time == \"Continuous\" | Comps.time == \"Yes, continual\"),Design.control == 0)\n# CT <- distinct(CT)\n# CT$study_type <- \"CT\"\n# CG <- filter(study, Design.control == 0, Comps == 1, (Comps.type == \"Cultural/ethnic groups\" | Comps.type == \"Demographic groups\" | Comps.type == \"Presence/Absence of intervention\" | Comps.type == \"Presence/absence of intervention\" | Comps.type == \"Projects\" | Comps.type == \"Sites\" | Comps.type == \"Socio-economic groups/levels\" | Comps.type == \"User groups\"| Comps.type == \"cultural/ethnic groups\" | Comps.type == \"demographic groups\" | Comps.type == \"presence/absence of intervention\" | Comps.type == \"project\" | Comps.type == \"projects\" | Comps.type == \"sites\" | Comps.type == \"socio-economic\" | Comps.type == \"socio-economic groups\" | Comps.type == \"user groups\"))\n# CG <- distinct(CG)\n# CG$study_type <- \"CG\"\n# CGBA <- filter(study, (Comps.type != \"\" | Comps.type != \"None\" | Comps.type != \"Unspecified\"),(Comps.time == \"Punctuated\" | Comps.time == \"Yes, punctuated\"), Design.control == 0)\n# CGBA <- distinct(CGBA)\n# CGBA$study_type <- \"CGBA\"\n# CGCI <- filter(study, (Comps.type != \"\" | Comps.type != \"None\" | Comps.type != \"Unspecified\"), Design.control == 1)\n# CGCI <- distinct(CGCI)\n# CGCI$study_type <- \"CGCI\"\n# NONE <- filter(study,Comps ==0)\n# NONE <- distinct(NONE)\n# NONE$study_type <- \"None\"\n# \n# study <- bind_rows(BACI, BA, CT, CG, CGBA, CGCI, NONE)\n# study <- distinct(study)\n# study <- arrange(study,aid)\n\nmap_data_final <- left_join(map_data_final,data.study,by=\"aid\")\nmap_data_final <- distinct(map_data_final)\n\n# #read in DOI info\n# doi <- readRDS(\"data/map_data_final_doi_sent.rds\")\n# doi <- select(doi, aid,DOI, Title.formatted, Fullcitation)\n# doi <- distinct(doi)\n\n# map_data_final <- select(map_data_final, -DOI)\n# map_data_final <- left_join(map_data_final,doi,by=\"aid\")\n# map_data_final <- distinct(map_data_final)\n# map_data_final <- map_data_final[apply(map_data_final,1,function(x)any(!is.na(x))),]\n\n# #Read in open access info\n# open <- read.csv(\"data/data+openaccess.csv\",header=TRUE)\n# map_data_final <- left_join(map_data_final,open,by=\"aid\")\n\n#Add additional data\nextra <- read.csv(\"data/IWT_titles.csv\",header=TRUE)\nextra <- select(extra, -Authors,-Pub_year,-Title,-Species)\nmap_data_final <- select(map_data_final,-DOI)\nmap_data_final <- left_join(map_data_final,extra,by=\"aid\")\n\nmap_data_final$link <- c(\"\")\nnrows <- c(1:nrow(map_data_final))\nfor (i in nrows){\n  doi <- as.character(map_data_final[i,\"DOI\"])\n  x <- sprintf(\"Link: '<a href=\\\"%s\\\" target=\\\"_blank\\\">\\\"%s\\\"</a>'\",doi,doi)\n  map_data_final[i,\"link\"] <- x\n}\n\nsaveRDS(map_data_final,file=\"data/map_data_final.rds\")\n\nint_type_def = as.data.frame(c(\"area_protect\", \"area_mgmt\", \"res_mgmt\", \"sp_control\", \"restoration\", \"sp_mgmt\", \"sp_recov\", \"sp_reint\", \"ex_situ\", \"form_ed\", \"training\", \"aware_comm\", \"legis\", \"pol_reg\", \"priv_codes\", \"compl_enfor\", \"liv_alt\", \"sub\", \"market\", \"non_mon\", \"inst_civ_dev\", \"part_dev\", \"cons_fin\", \"sus_use\", \"other\"))\n\ngroup_type_def = as.data.frame(c(\"area_protect\", \"res_mgmt\", \"land_wat_mgmt\", \"species_mgmt\", \"education\", \"law_policy\", \"liv_eco_inc\", \"ext_cap_build\", \"sus_use\", \"other\"))\n\nout_type_def = as.data.frame(c(\"env\", \"mat_liv_std\", \"eco_liv_std\", \"health\", \"education\", \"soc_rel\", \"sec_saf\", \"gov\", \"sub_well\", \"culture\", \"free_choice\", \"other\"))\n",
    "created" : 1500599325888.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2525563199",
    "id" : "70AC7F78",
    "lastKnownWriteTime" : 1500599608,
    "last_content_update" : 1500599608959,
    "path" : "~/Documents/github/wildlife_trade_portal/data/map_data_generation.R",
    "project_path" : "data/map_data_generation.R",
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}