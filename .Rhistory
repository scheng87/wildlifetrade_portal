library(shiny)
library(tidyr)
library(shinythemes)
library(shinyBS)
library(gplots)
library(RColorBrewer)
library(maptools)
library(ggplot2)
library(shinydashboard)
library(plotly)
library(scales)
library(lattice)
library(car)
library(shinyjs)
library(grid)
library(googlesheets)
library(rgdal)
library(leaflet)
library(htmltools)
library(raster)
library(sp)
library(reshape2)
library(stringr)
library(dplyr)
setwd("~/Documents/github/IWT_data_portal/")
#setwd("/srv/shiny-server/iwt_portal/")
load("data/IWT_Evidence_Map.RData")
map_data_final <- readRDS("data/map_data_final.rds")
# xl <- read.csv("test_data2.csv",header=TRUE,encoding="utf8")
source("functions.R")
setwd("~/Documents/github/wildlife_trade_portal/")
load("data/IWT_Evidence_Map.RData")
map_data_final <- readRDS("data/map_data_final.rds")
source("functions.R")
definitions <- read.csv("data/definitions.csv",header=TRUE)
definitions <- as.data.frame(definitions)
var.labels <- read.csv("data/codes.csv",header=TRUE)
var.labels <- as.data.frame(var.labels)
oecd <- read.csv("data/oecd.csv",header=TRUE)
regions <- read.csv("data/country_list2.csv", header=TRUE)
colnames(regions) <- c("COUNTRY", "REGION","CODE","SUBREGION","POINT")
reg <- read.csv("data/allcountries.csv",header=TRUE)
coordinates <- read.csv("data/country_lat_lon.csv",header=TRUE)
countries_shape <- read.csv("data/country_coordinates.csv",header=TRUE)
parts_type <- c("Whole animal","Organs","Tissue","Bones","Extracts","Meat","Horn","Wool","Skin","Whole plant","Other")
purpose_type <- c("Food","Fuel","Medicine","Decoration","Pets","Construction","Clothing","Trophy","Other")
supply_type <- c("Supply","Trade","Consumer")
impl_type <- c("Academic","Public sector","Research institute","Consultant","Non-profit","Private sector/industry","International Convention")
design_type <- c("Experimental","Quasi experimental","Non-experimental","Systematic review")
comp_type <- c("Control-intervention site comparisons","Before-after","Spatial comparator","Interrupted time series","Continuous time series","Group comparators between populations of people, ecosystems or species","Presence/absence of intervention")
int_type <- c("laws","policies","detection","prosecution","civil","substitution","awareness","market","disincentive","stewardship","conflict","spat_protect","harvest_reg","culture")
int_labels <- c("Laws, regulations & codes","Policies & regulations", "Detection","Prosecution","Civil action","Substitutions","Awareness raising","Market-based incentives","Disincentives for illegal behavior","Incentives for stewardship of wildlife","Decrease human-wildlife conflict","Spatial areas of protection","Regulate harvest","Culturing of species")
out_type <- c("Management","Protection","Trade","Behavior change","Population","Species","Economic living standards","Material living standards","Health","Education","Social relations","Security and safety","Governance and empowerment","Subjective well-being","Culture & spirituality","Freedom of choice & action")
int_group <- c("Enforcement/compliance","Establish/refine laws & policies","Reduce demand/consumption","Reduce threats to species","Support livelihoods")
out_group <- c("Conservation","Species","Socio-economic")
countries <- as.vector(reg$Country)
fields <- c("name", "email","organization", "agree")
table <- "portal_registration"
terr_labs <- read.csv("data/ter_biome.csv",header=TRUE)
colnames(terr_labs) <- c("BIOME","ECOREGION")
table <- "wildlife_portal_registration"
View(terr_labs)
assignIntGroup <- function(input,output){
rows <- c(1:nrow(input))
int_groups <- matrix(nrow=nrow(input),ncol=1)
rownames(int_groups) <- rows
colnames(int_groups) <- c("int_group")
for (i in rows){
int <- as.vector(input$Int_type[i])
if (int == "laws" | int == "policies") {
group <- "Establish/refine laws & policies"
} else if (int == "detection" | int == "prosecution" | int == "civil") {
group <- "Enforcement/compliance"
} else if (int == "substitution" | int == "awareness" | int == "market") {
group <- "Reduce demand/consumption"
} else if (int == "disincentive" | int == "stewardship" | int == "conflict") {
group <- "Support livelihoods"
} else if (int == "spat_protect" | int == "harvest_reg" | int == "culture") {
group <- "Reduce threats to species"
} else
group <- int
int_groups[i,"int_group"] <- group
}
int_groups <- as.data.frame(int_groups)
output <- bind_cols(input,int_groups)
output <- filter(output,!is.na(int_groups))
return(output)
}
assignOutGroup <- function(input,output){
rows <- c(1:nrow(input))
out_groups <- matrix(nrow=nrow(input),ncol=1)
rownames(out_groups) <- rows
colnames(out_groups) <- c("out_group")
for (i in rows){
out <- as.vector(input$Outcome[i])
if (out == "Management" | out == "Protection" | out == "Trade" | out == "Behavior change") {
group <- "Conservation"
} else if (out == "Population" | out == "Species") {
group <- "Biological"
} else if (out == "Economic living standards" | out == "Material living standards" | out == "Health" | out == "Education" | out == "Social relations" | out == "Security and safety" | out == "Governance and empowerment" | out == "Subjective well-being" | out == "Culture & spirituality" | out == "Freedom of choice & action") {
group <- "Socio-economic"
} else
group <- out
out_groups[i,"out_group"] <- group
}
out_groups <- as.data.frame(out_groups)
output <- bind_cols(input,out_groups)
output <- filter(output,!is.na(out_groups))
return(output)
}
assignIntLabel <- function(input,output){
rows <- c(1:nrow(input))
int_labels <- matrix(nrow=nrow(input),ncol=1)
rownames(int_labels) <- rows
colnames(int_labels) <- c("int_label")
for (i in rows){
int <- as.vector(input$Int_type[i])
if (int == "laws") {
group <- "Laws, regulations & codes"
} else if (int == "policies") {
group <- "Policies & regulations"
} else if (int == "substitution") {
group <- "Substitution"
} else if (int == "awareness") {
group <- "Awareness raising"
} else if (int == "market") {
group <- "Market-based incentives"
} else if (int == "disincentive"){
group <- "Disincentives for illegal behavior"
} else if (int == "stewardship"){
group <- "Incentives for stewardship of wildlife"
} else if (int == "conflict"){
group <- "Decrease human-wildlife conflict"
} else if (int == "detection"){
group <- "Detection"
} else if (int == "prosecution"){
group <- "Prosecution"
} else if (int == "civil"){
group <- "Civil action"
} else if (int == "spat_protect"){
group <- "Spatial areas of protection"
} else if (int == "harvest_reg"){
group <- "Regulate harvest"
} else if (int == "culture"){
group <- "Culturing of species"
} else
group <- int
int_labels[i,"int_label"] <- group
}
int_labels <- as.data.frame(int_labels)
output <- bind_cols(input,int_labels)
output <- filter(output,!is.na(int_labels))
return(output)
}
assignSupLabel <- function(input,output){
rows <- c(1:nrow(input))
int_labels <- matrix(nrow=nrow(input),ncol=1)
rownames(int_labels) <- rows
colnames(int_labels) <- c("supply_label")
for (i in rows){
int <- as.vector(input$variable[i])
if (int == "supply") {
group <- "Supply-side"
} else if (int == "trade") {
group <- "Trade controls"
} else if (int == "consumer") {
group <- "End-market"
} else
group <- int
int_labels[i,"supply_label"] <- group
}
int_labels <- as.data.frame(int_labels)
output <- bind_cols(input,int_labels)
output <- filter(output,!is.na(int_labels))
return(output)
}
saveData <- function(data) {
# Grab the Google Sheet
sheet <- gs_title(table)
# Add the data as a new row
gs_add_row(sheet, input = data)
}
loadData <- function() {
# Grab the Google Sheet
sheet <- gs_title(table)
# Read the data
gs_read_csv(sheet)
}
View(data.study)
runApp()
runApp()
runApp()
View(data.study)
study_labels <- c("Experimental","Quasi-experimental", "Non-experimental","Non-systematic review","Systematic review")
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(map_data_final)
colnames(map_data_final)
int_type
int_group
count(map_data_final,int_group)
count(map_data_final,out_group)
int_type
int_labels
out_type
colnames(map_data_final)
View(map_data_final)
View(data.pathway)
setwd("~/Documents/github/visualizations/beta_tool/data/")
setwd("~/Documents/github/visualizations/beta_tool/")
map_data_final <- readRDS("data/map_data_final.rds")
View(map_data_final)
shiny::runApp()
shiny::runApp()
library(tidyr)
library(dplyr)
setwd("~/Documents/github/dataportal2/")
map_data_final <- readRDS("data/map_data_final.rds")
journal <- select(aid,Journal)
journal <- select(map_data_final,aid,Journal)
journal <- distinct(journal)
View(journal)
j_c <- count(journal,Journal)
View(j_c)
View(j_c)
j_c <- arrange(j_c,desc(n))
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
int_group
shiny::runApp()
int_group
View(map_data_final)
View(data.biomes)
runApp()
runApp()
View(intlabels)
shiny::runApp()
runApp()
colnames(map_data_final)
count(map_data_final,Int_type)
runApp()
View(regions)
colnames(intlabels)
colnames(biomelabels)
runApp()
runApp()
runApp()
View(intlabels)
View(map_data_final)
colnames(map_data_final)
count(map_data_final,Outcome)
runApp()
View(map_data_final)
m <- select(map_data_final,aid,Authors,Pub_year,Title)
m <- distinct(m)
write.csv(m,"IWT_titles")
runApp()
colnames(map_data_final)
int_group
int_labels
runApp()
count(map_data_final,int_type)
count(map_data_final,Int_type)
assignIntLabel <- function(input,output){
rows <- c(1:nrow(input))
int_labels <- matrix(nrow=nrow(input),ncol=1)
rownames(int_labels) <- rows
colnames(int_labels) <- c("int_label")
for (i in rows){
int <- as.vector(input$Int_type[i])
if (int == "laws") {
group <- "Laws, regulations & codes"
} else if (int == "policies") {
group <- "Policies & regulations"
} else if (int == "substitution") {
group <- "Substitution"
} else if (int == "awareness") {
group <- "Awareness raising"
} else if (int == "market") {
group <- "Market-based incentives"
} else if (int == "disincentive"){
group <- "Disincentives for illegal behavior"
} else if (int == "stewardship"){
group <- "Incentives for stewardship of wildlife"
} else if (int == "conflict"){
group <- "Decrease human-wildlife conflict"
} else if (int == "detection"){
group <- "Detection"
} else if (int == "prosecution"){
group <- "Prosecution"
} else if (int == "civil"){
group <- "Civil action"
} else if (int == "spat_protect"){
group <- "Spatial areas of protection"
} else if (int == "harvest_reg"){
group <- "Regulate harvest"
} else if (int == "culture"){
group <- "Culturing of species"
} else
group <- int
int_labels[i,"int_label"] <- group
}
int_labels <- as.data.frame(int_labels)
output <- bind_cols(input,int_labels)
output <- filter(output,!is.na(int_labels))
return(output)
}
map_data_final <- assignIntLabel(map_data_final)
View(map_data_final)
saveRDS(map_data_final,file="data/map_data_final.rds")
runApp()
View(map_data_final)
runApp()
colnames(map_data_final)
assignOutGroup <- function(input,output){
rows <- c(1:nrow(input))
out_groups <- matrix(nrow=nrow(input),ncol=1)
rownames(out_groups) <- rows
colnames(out_groups) <- c("out_group")
for (i in rows){
out <- as.vector(input$Outcome[i])
if (out == "Management" | out == "Protection" | out == "Trade" | out == "Behavior change") {
group <- "Behaviour change"
} else if (out == "Population" | out == "Species") {
group <- "Biological"
} else if (out == "Economic living standards" | out == "Material living standards" | out == "Health" | out == "Education" | out == "Social relations" | out == "Security and safety" | out == "Governance and empowerment" | out == "Subjective well-being" | out == "Culture & spirituality" | out == "Freedom of choice & action") {
group <- "Human well-being"
} else
group <- out
out_groups[i,"out_group"] <- group
}
out_groups <- as.data.frame(out_groups)
output <- bind_cols(input,out_groups)
output <- filter(output,!is.na(out_groups))
return(output)
}
colnames(map_data_final)
count(map_data_final,out_group)
assignOutGroup <- function(input,output){
rows <- c(1:nrow(input))
out_groups <- matrix(nrow=nrow(input),ncol=1)
rownames(out_groups) <- rows
colnames(out_groups) <- c("out_group")
for (i in rows){
out <- as.vector(input$Outcome[i])
if (out == "Management" | out == "Protection" | out == "Trade" | out == "Behavior change") {
group <- "Behavioural"
} else if (out == "Population" | out == "Species") {
group <- "Biological"
} else if (out == "Economic living standards" | out == "Material living standards" | out == "Health" | out == "Education" | out == "Social relations" | out == "Security and safety" | out == "Governance and empowerment" | out == "Subjective well-being" | out == "Culture & spirituality" | out == "Freedom of choice & action") {
group <- "Human well-being"
} else
group <- out
out_groups[i,"out_group"] <- group
}
out_groups <- as.data.frame(out_groups)
output <- bind_cols(input,out_groups)
output <- filter(output,!is.na(out_groups))
return(output)
}
map_data_final <- assignOutGroup(map_data_final)
map_data_final <- select(map_data_final,-out_group)
map_data_final <- assignOutGroup(map_data_final)
out_group <- c("Behavioural","Species","Socio-economic")
count(map_data_final,Outcome)
count(map_data_final,out_type)
count(map_data_final,out_group)
out_group <- c("Behavioural","Biological","Human well-being")
out_type
runApp()
runApp()
View(map_data_final)
map_data_final <- select(map_data_final,-out_group)
map_data_final <- assignOutGroup(map_data_final)
View(map_data_final)
saveRDS(map_data_final,file="data/map_data_final.rds")
runApp()
colnames(map_data_final)
count(map_data_final,Design.type)
count(map_data_final,Int_supplytype)
count(map_data_final,Int_supplychain)
assignSupLabel <- function(input,output){
rows <- c(1:nrow(input))
int_labels <- matrix(nrow=nrow(input),ncol=1)
rownames(int_labels) <- rows
colnames(int_labels) <- c("supply_label")
for (i in rows){
int <- as.vector(input$variable[i])
if (int == "supply") {
group <- "Supply-side"
} else if (int == "trade") {
group <- "Trade controls"
} else if (int == "consumer") {
group <- "End-market"
} else
group <- int
int_labels[i,"supply_label"] <- group
}
int_labels <- as.data.frame(int_labels)
output <- bind_cols(input,int_labels)
output <- filter(output,!is.na(int_labels))
return(output)
}
supply_type <- c("supply","trade","consumer")
runApp()
colnames(map_data_final)
count(map_data_final,Species)
data <- map_data_final
dat <- map_data_final
ib_counts = matrix(nrow=length(supply_type), ncol=2)
rownames(ib_counts) <- supply_type
var_type <- supply_type
for (i in var_type){
subset <- filter(dat, Int_supplychain == i)
ib_counts[i,1] <- i
ib_counts[i,2] <- n_distinct(subset$aid)
}
colnames(ib_counts) <- c("var","count")
ib_counts <- as.data.frame(ib_counts)
ib_counts$count <- as.numeric(as.vector(ib_counts$count))
ib_counts$labels <- c("Supply","Trade","Consumer")
View(ib_counts)
count(map_data_final,Species)
m <- count(map_data_final,Outcome)
View(m)
m <- select(map_data_final, aid, Title, Pub_year,Authors, Species) %>% distinct
write.csv(m,"IWT_Titles.csv")
View(m)
write.csv(m,"IWT_Titles.csv")
colnames(map_data_final)
count(map_data_final,Purpose)
ib_counts = matrix(nrow=length(purpose_type), ncol=2)
rownames(ib_counts) <- purpose_type
var_type <- purpose_type
for (i in var_type){
subset <- filter(dat, Purpose == i)
ib_counts[i,1] <- i
ib_counts[i,2] <- n_distinct(subset$aid)
}
colnames(ib_counts) <- c("var","count")
ib_counts <- as.data.frame(ib_counts)
View(ib_counts)
purpose_type <- c("food","fuel","medicine","decoration","pets","construction","clothing","trophy","other")
ib_counts = matrix(nrow=length(purpose_type), ncol=2)
rownames(ib_counts) <- purpose_type
var_type <- purpose_type
for (i in var_type){
subset <- filter(dat, Purpose == i)
ib_counts[i,1] <- i
ib_counts[i,2] <- n_distinct(subset$aid)
}
colnames(ib_counts) <- c("var","count")
ib_counts <- as.data.frame(ib_counts)
View(ib_counts)
ib_counts$count <- as.numeric(as.vector(ib_counts$count))
ib_counts$labels <- purpose_type
View(ib_counts)
purpose_type
ib_counts$labels <- c("Food","Fuel","Medicine","Decoration","Pets","Construction","Clothing","Trophy","Other")
runApp()
runApp()
View(definitions)
runApp()
runApp()
runApp()
shiny::runApp()
extra <- read.csv("data/IWT_titles.csv",header=TRUE)
extra <- read.csv("data/IWT_titles.csv",header=TRUE)
extra <- select(extra, -Authors,-Pub_year,-Title)
map_data_final <- left_join(map_data_final,extra,by="aid")
map_data_final$link <- c("")
nrows <- c(1:nrow(map_data_final))
for (i in nrows){
doi <- as.character(map_data_final[i,"DOI"])
x <- sprintf("Link: '<a href=\"%s\" target=\"_blank\">\"%s\"</a>'",doi,doi)
map_data_final[i,"link"] <- x
}
View(map_data_final)
setwd("~/Documents/github/wildlife_trade_portal/")
map_data_final <- readRDS("data/map_data_final.rds")
map_data_final <- select(-DOI)
map_data_final <- select(map_data_final,-DOI)
extra <- read.csv("data/IWT_titles.csv",header=TRUE)
extra <- select(extra, -Authors,-Pub_year,-Title)
map_data_final <- left_join(map_data_final,extra,by="aid")
map_data_final$link <- c("")
nrows <- c(1:nrow(map_data_final))
for (i in nrows){
doi <- as.character(map_data_final[i,"DOI"])
x <- sprintf("Link: '<a href=\"%s\" target=\"_blank\">\"%s\"</a>'",doi,doi)
map_data_final[i,"link"] <- x
}
saveRDS(map_data_final,file="data/map_data_final.rds")
runApp()
View(map_data_final)
map_data_final$Species <- map_data_final$Species.x
View(map_data_final)
map_data_final <- select(map_data_final,-Species.x,-Species.y)
saveRDS(map_data_final,file="data/map_data_final.rds")
shiny::runApp()
