{
    "collab_server" : "",
    "contents" : "##Interactive webportal for international wildlife trade evidence map\n\n##server\n\n##Main server.R for beta tool\nsource(\"sources.R\")\nsource(\"server_explore.R\")\nsource(\"server_pages.R\")\nsource(\"server_about.R\")\n#source(\"server_biome.R\")\n\nshinyServer(function(input,output,session){\n  env_serv=environment()\n  ########=======#######\n  ##====BIOME PAGE====##\n  ########=======#######\n  \n#=====Read in shapefiles for WWF terrestrial, freshwater, and marine ecoregions=====##\n  # ter <- readOGR(\"data/Simplified\", layer=\"wwf_1km\")\n  # terr <- data.frame(BIOME=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,98,99),biome_label=c(\"Tropical/Subtropical Moist Broadleaf Forests\",\"Tropical/Subtropical Dry Broadleaf Forests\",\"Tropical/Subtropical Coniferous Forests\",\"Temperate Broadleaf & Mixed Forests\",\"Temperate Coniferous Forests\",\"Boreal Forests/Taiga\",\"Tropical/Subtropical Grasslands, Savannas, & Shrublands\",\"Temperate Grasslands, Savannas & Shrublands\",\"Flooded Grasslands & Savannas\",\"Montane Grasslands & Shrublands\",\"Tundra\",\"Mediterranean Forests, Woodlands & Scrubs\",\"Deserts & Xeric Shrublands\",\"Mangroves\",\"Unknown\",\"Unidentified\"))\n  # ter <- merge(ter,terr,by=\"BIOME\")\n  # ter2 <- subset(ter,ter$BIOME %in% c(1:14))\n  # fre <- readOGR(\"data/Simplified\", layer=\"FEOW_1km\")\n  # mar <- readOGR(\"data/Simplified\", layer=\"meow_1km\")\n  # \n  # ##=====Subset into biomes========##\n  # FOR <- subset(ter,ter$BIOME %in% c(1:6,12))\n  # GRS <- subset(ter,ter$BIOME %in% c(7:10))\n  # DES <- subset(ter,ter$BIOME %in% c(13))\n  # TUN <- subset(ter,ter$BIOME %in% c(11))\n  # MAN <- subset(ter,ter$BIOME %in% c(14))\n  \n  startp(env_serv)\n  adata(env_serv)\n  elink(env_serv)\n  eintout(env_serv)\n  #ebiom(env_serv)\n  \n  code_def <- reactive({\n    t <- filter(var.labels,code == as.character(input$code))\n    p <- t$code_def\n  })\n  \n  observeEvent(input$toggle_lu, {\n    toggle(\"gloss\")\n  })\n  \n  observeEvent(input$user_reg1, {\n    updateNavbarPage(session, \"mainpage\", selected=\"regist\")\n  })\n  \n  observeEvent(input$user_reg2, {\n    updateNavbarPage(session, \"mainpage\", selected=\"regist\")\n  })\n  \n  observeEvent(input$user_reg3, {\n    updateNavbarPage(session, \"mainpage\", selected=\"regist\")\n  })\n  \n  observeEvent(input$user_reg4, {\n    updateNavbarPage(session, \"mainpage\", selected=\"regist\")\n  })\n  \n  observeEvent(input$submit, {\n    output$thankyou <- renderText({\n      \"Thank you for registering. You may now go back to the exploration pages to download your data.\"\n    })\n  })\n  \n  output$code_out <- renderText({ paste(as.character(code_def())) })\n  \n  intdef1 <- reactive({\n    data <- filter(definitions,Term == input$intervention_def1)\n    def <- data$Definition\n  })\n  \n  intex1 <- reactive({\n    data <- filter(definitions,Term == input$intervention_def1)\n    ex <- data$Example\n  })\n  \n  output$int_def21 <- renderText({\n    paste(as.character(intdef1()))\n  })\n  \n  output$int_def31 <- renderText({\n    paste(as.character(intex1()))\n  })\n  \n  outdef1 <- reactive({\n    data <- filter(definitions,Term == input$outcome_def1)\n    def <- data$Definition\n  })\n  outex1 <- reactive({\n    data <- filter(definitions,Term == input$outcome_def1)\n    ex <- data$Example\n  })\n  \n  output$out_def21 <- renderText({\n    paste(as.character(outdef1()))\n  })\n  \n  output$out_def31 <- renderText({\n    paste(as.character(outex1()))\n  })\n  \n  biodef1 <- reactive({\n    data <- filter(definitions,Term == input$biome_def1)\n    def <- data$Definition\n  })\n  bioex1 <- reactive({\n    data <- filter(definitions,Term == input$biome_def1)\n    ex <- data$Example\n  })\n  \n  output$bio_def21 <- renderText({\n    paste(as.character(biodef1()))\n  })\n  \n  output$bio_def31 <- renderText({\n    paste(as.character(bioex1()))\n  })\n  \n  studydef1 <- reactive({\n    data <- filter(definitions,Term == input$study_def1)\n    def <- data$Definition\n  })\n  studyex1 <- reactive({\n    data <- filter(definitions,Term == input$study_def1)\n    ex <- data$Example\n  })\n  \n  output$study_def21 <- renderText({\n    paste(as.character(studydef1()))\n  })\n  \n  output$study_def31 <- renderText({\n    paste(as.character(studyex1()))\n  })\n  \n  # Whenever a field is filled, aggregate all form data for user registration\n  formData <- reactive({\n    data <- sapply(fields, function(x) input[[x]])\n    data\n  })\n  \n  # When the Submit button is clicked, save the form data\n  observeEvent(input$submit, {\n    saveData(formData())\n  })\n  \n})",
    "created" : 1496882807147.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1493477902",
    "id" : "894F8BB6",
    "lastKnownWriteTime" : 1500590521,
    "last_content_update" : 1500590521310,
    "path" : "~/Documents/github/wildlife_trade_portal/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}